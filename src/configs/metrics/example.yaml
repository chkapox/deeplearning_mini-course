# device: auto
# train:
#   - _target_: src.metrics.ExampleMetric
#     name: TRAIN_Accuracy
#     device: ${metrics.device}
#     metric:
#       _target_: torchmetrics.classification.MulticlassAccuracy
#       num_classes: 2
# inference:
#   - _target_: src.metrics.ExampleMetric
#     name: Accuracy
#     device: ${metrics.device}
#     metric:
#       _target_: torchmetrics.classification.BinaryAccuracy
#       threshold: 0.5
#   - _target_: src.metrics.ExampleMetric
#     name: F1
#     device: ${metrics.device}
#     metric:
#       _target_: torchmetrics.classification.BinaryF1Score
#   - _target_: src.metrics.ExampleMetric
#     name: AUROC
#     device: ${metrics.device}
#     metric:
#       _target_: torchmetrics.classification.BinaryAUROC
#   - _target_: src.metrics.ExampleMetric
#     name: EER
#     device: ${metrics.device}
#     metric:
#       _target_: torchmetrics.classification.BinaryAUROC  # заглушка, считаем вручную

device: auto
train:
  - _target_: src.metrics.example.ExampleMetric
    name: TRAIN_Accuracy
    device: ${metrics.device}
    metric: null
inference:
  - _target_: src.metrics.example.ExampleMetric
    name: Accuracy
    device: ${metrics.device}
    metric: null
  - _target_: src.metrics.example.ExampleMetric
    name: F1
    device: ${metrics.device}
    metric: null
  - _target_: src.metrics.example.ExampleMetric
    name: AUROC
    device: ${metrics.device}
    metric: null
  - _target_: src.metrics.example.ExampleMetric
    name: EER
    device: ${metrics.device}
    metric: null
